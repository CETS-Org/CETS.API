name: .NET CI - Build and Test CETS.API

on:
  push:
    branches: [ develop, staging, main, dev_minhdq ]
  pull_request:
    branches: [ develop, staging, main, dev_minhdq ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the main API repository into a 'main-repo' directory
      - name: Checkout API repo
        uses: actions/checkout@v4
        with:
          path: main-repo

      # Step 2: Checkout the Core repository into a 'core-repo' directory
      - name: Checkout CETS.Core repo
        uses: actions/checkout@v4
        with:
          repository: CETS-Org/CETS.Core 
          path: core-repo
          token: ${{ secrets.GH_PAT }}

      # Step 3: Setup the .NET SDK
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      # Step 4: Remove old Core project references from solution
      - name: Remove Old Core References from Solution
        working-directory: ./main-repo
        run: |
          dotnet sln CETS.API.sln remove $(dotnet sln CETS.API.sln list | grep "CETS\.Core" | tr -d '\r') || true
          echo "Removed old Core project references from solution"

      # Step 5: Add Core projects with correct paths
      - name: Add Core Projects to Solution
        working-directory: ./main-repo
        run: |
          CORE_PROJECT_PATHS=$(find ../core-repo -maxdepth 2 -name '*.csproj')
          if [ -n "$CORE_PROJECT_PATHS" ]; then
            echo "Adding Core projects to CETS.API.sln: $CORE_PROJECT_PATHS"
            # Remove any existing references first to avoid duplicates
            for project in $CORE_PROJECT_PATHS; do
              dotnet sln CETS.API.sln remove "$project" 2>/dev/null || true
            done
            # Add the projects
            dotnet sln CETS.API.sln add $CORE_PROJECT_PATHS
            echo "Solution file updated. Current projects:"
            dotnet sln CETS.API.sln list
          else
            echo "No Core projects found to add."
          fi

      # Step 6: Update ProjectReference paths inside .csproj files
      - name: Update Project Reference Paths in .csproj files
        working-directory: ./main-repo
        run: |
          CSPROJ_FILES=$(find . -type f -name "*.csproj" ! -path "./.git/*")
          
          echo "Updating project references in .csproj files..."

          for file in $CSPROJ_FILES; do
            # Replace Windows-style paths
            sed -i 's|\.\.\\\.\.\\CETS\.Core\\|../core-repo/|g' "$file"
            # Replace Unix-style paths  
            sed -i 's|\.\./\.\./CETS\.Core/|../core-repo/|g' "$file"
            # Replace any remaining CETS.Core references
            sed -i 's|CETS\.Core/|core-repo/|g' "$file"
            echo "Patched $file"
          done

      # Step 7: Restore dependencies
      - name: Restore
        working-directory: ./main-repo
        run: dotnet restore CETS.API.sln

      # Step 8: Build the solution
      - name: Build
        working-directory: ./main-repo
        run: dotnet build CETS.API.sln -c Release --no-restore

      # Step 9: Run tests
      - name: Test
        working-directory: ./main-repo
        run: dotnet test CETS.API.sln --no-build --verbosity normal